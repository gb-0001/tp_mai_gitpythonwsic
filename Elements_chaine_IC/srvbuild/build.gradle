plugins {
  id "org.hasnat.php-build-plugin" version "0.1-SNAPSHOT"
  id "distribution"
  id "maven-publish"
}

def majorVersion = System.getenv("MAJOR_VERSION") ?: "1"
def minorVersion = System.getenv("MINOR_VERSION") ?: "0"
version = majorVersion + "." + minorVersion

task purge(type:Delete) {
  //println 'Cleaning up old files'
  delete 'build', 'vendor', 'logs', 'build/*.zip'
}

task dependances(type:Exec, dependsOn: purge) {
        executable 'sh'
        args '-c', 'pip install flask pytest'
        standardOutput = new ByteArrayOutputStream()
        ext.output = { return standardOutput.toString() }
}


task test(type:Exec, dependsOn: dependances) {
        executable 'sh'
        args '-c', 'pytest test/test.py'
        standardOutput = new ByteArrayOutputStream()
        ext.output = { return standardOutput.toString() }
}


task directory1(type:Exec, dependsOn: dependances) {
        executable 'sh'
        args '-c', 'mkdir ./build'
        standardOutput = new ByteArrayOutputStream()
        ext.output = { return standardOutput.toString() }
}


def tarfile = "application-inventory-" + version
task packageDistribution(type: Zip, dependsOn: directory1) {
        from ('inventory.py')
        archiveFileName = tarfile + ".zip"
        destinationDirectory = file("build")
}


task up(type:Exec, dependsOn: packageDistribution) {
   executable 'sh'
   args '-c', 'curl -v --user "admin:password" --upload-file build/application-inventory-1.0.zip http://192.168.1.200:8081/repository/APP/application/project/version/application-inventory-1.0.zip'
   standardOutput = new ByteArrayOutputStream()
   ext.output = { return standardOutput.toString() }
 }